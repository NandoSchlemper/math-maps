// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.906
// Will have basic understanding about the plate, will be inside square

// Aqui vou ser bem direto quanto aos dados, preciso retornar basicamente em formato tabular os dados que vou receber da API

package position

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import "math-coordenadas/api/entities"

// A forma como os dados ficarão apresentados será em formato de TABELA a principio, ou seja
// <modificar aqui como que ficarão a estilização do baguio>
// Cada "Row" será SELECIONÁVEL, e mostrará um modal do histórico daquela determinada placa
// Como Tables funcionam em HTML e CSS? Bem simples!
// tr é basicamente pra definir que estamos definindo valores para a tabela
// th é para definirmos todas as colunas, nesse caso, possiveis locais para o caminhão estar
// td são as informações de cada row da tabela

// Basicamente, fazer um for para receber os dados e criar uma row da tabela para cada um dos dados recebidos
func LoadRows(dados entities.Response) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<table class=\"position-table\"><thead><tr><th>ID</th><th>Operação</th><th>Motorista</th><th>Placas</th><th>Localizações</th><th>Velocidade</th><th>Estado</th></tr></thead> <tbody>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		for _, placa := range dados.Dados {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "<tr><td>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var2 string
			templ_7745c5c3_Var2, templ_7745c5c3_Err = templ.JoinStringErrs(placa.ID)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `frontend/components/position/plate_informations.templ`, Line: 34, Col: 29}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var2))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "</td><td>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var3 string
			templ_7745c5c3_Var3, templ_7745c5c3_Err = templ.JoinStringErrs(placa.Operação.Nome)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `frontend/components/position/plate_informations.templ`, Line: 35, Col: 42}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var3))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "</td><td>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var4 string
			templ_7745c5c3_Var4, templ_7745c5c3_Err = templ.JoinStringErrs(placa.Motorista)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `frontend/components/position/plate_informations.templ`, Line: 36, Col: 36}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var4))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 5, "</td><td>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var5 string
			templ_7745c5c3_Var5, templ_7745c5c3_Err = templ.JoinStringErrs(placa.Placa)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `frontend/components/position/plate_informations.templ`, Line: 37, Col: 32}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var5))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 6, "</td><td><a href=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var6 templ.SafeURL
			templ_7745c5c3_Var6, templ_7745c5c3_Err = templ.JoinURLErrs(placa.LinkPosition())
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `frontend/components/position/plate_informations.templ`, Line: 39, Col: 49}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var6))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 7, "\" target=\"_blank\" rel=\"noopener noreferrer\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var7 string
			templ_7745c5c3_Var7, templ_7745c5c3_Err = templ.JoinStringErrs(placa.Location)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `frontend/components/position/plate_informations.templ`, Line: 39, Col: 108}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var7))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 8, "</a></td><td>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var8 string
			templ_7745c5c3_Var8, templ_7745c5c3_Err = templ.JoinStringErrs(placa.Velocidades())
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `frontend/components/position/plate_informations.templ`, Line: 41, Col: 40}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var8))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 9, "</td><td>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var9 string
			templ_7745c5c3_Var9, templ_7745c5c3_Err = templ.JoinStringErrs(placa.Estado)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `frontend/components/position/plate_informations.templ`, Line: 42, Col: 33}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var9))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 10, "</td></tr>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 11, "</tbody></table><style>\r\n    .position-table {\r\n        width: 100%;\r\n        border-collapse: separate;\r\n        border-spacing: 0;\r\n        margin: 20px 0;\r\n        font-family: sans-serif;\r\n        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n        border-radius: 8px;\r\n        overflow: hidden;\r\n        background: white;\r\n    }\r\n\r\n    .position-table th {\r\n        background-color: #5900ff;\r\n        color: white;\r\n        text-transform: uppercase;\r\n        letter-spacing: 1px;\r\n        font-size: 14px;\r\n        font-weight: 500;\r\n        padding: 15px;\r\n        text-align: left;\r\n        position: relative;\r\n    }\r\n\r\n    .position-table th:not(:last-child):after {\r\n        content: \"\";\r\n        position: absolute;\r\n        right: 0;\r\n        top: 25%;\r\n        height: 50%;\r\n        width: 1px;\r\n        background-color: rgba(255, 255, 255, 0.3);\r\n    }\r\n\r\n    .position-table td {\r\n        padding: 12px 15px;\r\n        border-bottom: 1px solid #f0f0f0;\r\n        transition: all 1.0s ease;\r\n    }\r\n\r\n    .position-table tr:last-child td {\r\n        border-bottom: none;\r\n    }\r\n\r\n    .position-table tr:hover td {\r\n        background-color: #f8f4ff;\r\n        color: #5900ff;\r\n        cursor: pointer;\r\n    }\r\n\r\n    .position-table tr {\r\n        transition: all 1.0s ease;\r\n        position: relative;\r\n    }\r\n\r\n    .position-table tr:after {\r\n        content: \"\";\r\n        position: absolute;\r\n        left: 0;\r\n        bottom: 0;\r\n        width: 0;\r\n        height: 2px;\r\n        background-color: #5900ff;\r\n        transition: all 2.0s cubic-bezier(0.35, 0.1, 0.25, 1);\r\n    }\r\n\r\n    .position-table tr:hover:after {\r\n        width: 100%;\r\n    }\r\n    </style>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

/*
type Dado struct {
	ID     string  `json:"id"`
	Placa  string  `json:"placa"`
	Lat    float64 `json:"lat,string"`
	Lon    float64 `json:"lon,string"`
	Status string
}
*/

var _ = templruntime.GeneratedTemplate
